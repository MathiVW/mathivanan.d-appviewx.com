<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_avx_appviewx_aut_other_device</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>create_other_device_in_appviewx</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current,previous/*null when async*/ ) {
	var dev_name =  current.name;
	var grinv = new GlideRecord('x_avx_appviewx_aut_other_device');
		grinv.initialize();
		grinv.addQuery('name',dev_name);
		grinv.setLimit(1);
		grinv.query();
		var is_add = "" ; 
		while(grinv.next()){
			if(grinv.name == dev_name){
				gs.addErrorMessage("Asset name already exists. Try adding with different name.");
				current.setAbortAction(true);
				is_add = "No";
			}
		}
	var grinv2 = new GlideRecord('x_avx_appviewx_aut_application_delivery_controllers');
		grinv2.initialize();
		grinv2.addQuery('name',dev_name);
		grinv2.setLimit(1);
		grinv2.query();
		while(grinv2.next()){
			if(grinv2.name == dev_name){
				gs.addErrorMessage("Asset name already exists. Try adding with different name.");
				current.setAbortAction(true);
				is_add = "No";
			}
		}
	if(is_add == "" && current.is_device_present_in_appviewx == 'Add'){
		var r = new sn_ws.RESTMessageV2();
		var url = gs.getProperty("x_avx_appviewx_aut.AppViewX URL");
		var username = gs.getProperty("x_avx_appviewx_aut.Username");
		var password = gs.getProperty("x_avx_appviewx_aut.Password");
		r.setEndpoint(url+"/avxapi/other-add-device?gwkey=f000ca01&gwsource=web");
		r.setHttpMethod("post");
		r.setRequestHeader("username", username);
		r.setRequestHeader("password", password);
		r.setRequestHeader("Content-Type", "application/json");
		var decrypted = current.password.getDecryptedValue();
		var payload = {"payload":{"primary":[{"vendor":"","access":[{"userName":"","password":"","accessType":"SSH:22"}],"module":[],"deviceType":[],"deviceCommunicationPort":{"sshPort":22},"name":"","ip":"","model":"","description":"","dataCenter":"","credentialType":"Manual Entry","enablePassword":"","deviceId":"","category":"Others","subsystem":"Others","status":"Inprogress","isAutoDetect":true}],"secondary":[]}};
		payload.payload.primary[0].access[0].userName = current.username.toString();
		payload.payload.primary[0].access[0].password = gs.base64Encode(decrypted.toString());
		payload.payload.primary[0].model = current.model.toString();
		payload.payload.primary[0].ip = current.ip_address_fqdn.toString();
		payload.payload.primary[0].name = current.name.toString();
		var pay = JSON.stringify(payload);
		r.setRequestBody(pay);
		r.setHttpTimeout(5000);
		var response = r.executeAsync();
		var responseBody,responseMessage;
		if (response.haveError())
		{
			responseMessage = response.getErrorMessage();
			responseBody = response.getBody();
			current.is_device_present_in_appviewx = responseMessage;
			gs.addErrorMessage("Failed to add device - "+ responseMessage);
		}
		else 
		{
			current.is_device_present_in_appviewx = "Added into AppViewX";
			gs.addInfoMessage("Device added succesfully in AppViewX");		
		}
		
	}
	else if(is_add == "" &&  current.is_device_present_in_appviewx == 'No'){
		current.is_device_present_in_appviewx = "Not Added";
	}
	else{
		//
	}
})(current,previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-03-15 02:45:10</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>8d6870131bfe6c102369eb1cad4bcbf1</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>create_other_device_in_appviewx</sys_name>
        <sys_overrides/>
        <sys_package display_value="AppViewX Automation+" source="x_avx_appviewx_aut">7165e2f81bc808502369eb1cad4bcbe0</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AppViewX Automation+">7165e2f81bc808502369eb1cad4bcbe0</sys_scope>
        <sys_update_name>sys_script_8d6870131bfe6c102369eb1cad4bcbf1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-03-15 11:12:27</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
